// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`allows positional arguments help shows them 1`] = `
"[1msubcmds sub2[22m

ARGUMENTS:
  [number] - a number[2m [optional][22m
  [str]    - a string[2m [default: [3manonymous[23m][22m

FLAGS:
  --help, -h - show help"
`;

exports[`allows positional arguments expects the correct order 1`] = `
"[0m[31m[31m[1merror: [22m[39mfound [33m1[39m error

  [31m[1m1.[22m[39m [31mNot a number[39m

[31m[1mhint: [22m[39mfor more information, try '[33msubcmds sub2 --help[39m'[0m"
`;

exports[`help for subcommands 1`] = `
"[1msubcmds[3m <subcommand>[23m[22m
[2m> [22mAn awesome subcommand app!

where [3m<subcommand>[23m can be one of:

[2m- [22mcomplex - Just prints the arguments
[2m- [22mcat - A simple \`cat\` clone [2m[alias: read][22m
[2m- [22mgreet - greet a person
[2m- [22mcomposed - a nested subcommand

[2mFor more help, try running \`[33msubcmds <subcommand> --help[39m\`[22m"
`;

exports[`invalid subcommand 1`] = `
"[0m[31m[31m[1merror: [22m[39mfound [33m1[39m error

  [31m[1m1.[22m[39m [31mNot a valid subcommand name[39m

[31m[1mhint: [22m[39mfor more information, try '[33msubcmds --help[39m'[0m"
`;

exports[`help for complex command 1`] = `
"[1msubcmds complex[22m [2m6.6.6-alpha[22m
[2m> [22mJust prints the arguments

ARGUMENTS:
  <pos1>   - a number
  <str>    - a string
  [...str] - a string

OPTIONS:
  --number, -n <number>         - a number
  --int-or-string <str>         - a string
  --float-or-string <str>       - a string
  --optional-option <str>       - a string[2m [optional][22m
  --no-type-option <str>        - a string
  --optional-with-default <str> - a string[2m [env: SOME_ENV_VAR][22m[2m [default: [3mHello[23m][22m

FLAGS:
  --boolean           - a boolean
  --bool-without-type - a boolean
  --help, -h          - show help
  --version, -v       - print the version"
`;

exports[`too many arguments 1`] = `
"[0m[31m[31m[1merror: [22m[39mfound [33m1[39m error

  [31m[1m1.[22m[39m [31mUnknown arguments[39m

[31m[1mhint: [22m[39mfor more information, try '[33msubcmds cat --help[39m'[0m"
`;

exports[`suggests a subcommand on typo 1`] = `
"[0m[31m[31m[1merror: [22m[39mfound [33m1[39m error

  [31m[1m1.[22m[39m [31mNot a valid subcommand name[39m
[31mDid you mean [3mgreet[23m?[39m

[31m[1mhint: [22m[39mfor more information, try '[33msubcmds --help[39m'[0m"
`;

exports[`displays subcommand help if no arguments passed 1`] = `
"[1msubcmds[3m <subcommand>[23m[22m
[2m> [22mAn awesome subcommand app!

where [3m<subcommand>[23m can be one of:

[2m- [22mcomplex - Just prints the arguments
[2m- [22mcat - A simple \`cat\` clone [2m[alias: read][22m
[2m- [22mgreet - greet a person
[2m- [22mcomposed - a nested subcommand

[2mFor more help, try running \`[33msubcmds <subcommand> --help[39m\`[22m"
`;

exports[`displays nested subcommand help if no arguments passed 1`] = `
"[1msubcmds composed[3m <subcommand>[23m[22m
[2m> [22ma nested subcommand

where [3m<subcommand>[23m can be one of:

[2m- [22mcat - A simple \`cat\` clone [2m[alias: read][22m

[2mFor more help, try running \`[33msubcmds composed <subcommand> --help[39m\`[22m"
`;

exports[`composes errors 1`] = `
"[0m[31m[31m[1merror: [22m[39mfound [33m3[39m errors

  [31m[1m1.[22m[39m [31mNot a number[39m
  [31m[1m2.[22m[39m [31mname must be capitalized[39m
  [31m[1m3.[22m[39m [31mNo value provided for --greeting[39m

[31m[1mhint: [22m[39mfor more information, try '[33msubcmds greet --help[39m'[0m"
`;

exports[`multiline error 1`] = `
"[0m[31m[31m[1merror: [22m[39mfound [33m2[39m errors

  [31m[1m1.[22m[39m [31mWoah, we're half way there[39m
[31mWoah! living on a prayer![39m
  [31m[1m2.[22m[39m [31mNo value provided for --greeting[39m

[31m[1mhint: [22m[39mfor more information, try '[33msubcmds greet --help[39m'[0m"
`;

exports[`help for composed subcommands 1`] = `
"[1msubcmds composed[3m <subcommand>[23m[22m
[2m> [22ma nested subcommand

where [3m<subcommand>[23m can be one of:

[2m- [22mcat - A simple \`cat\` clone [2m[alias: read][22m

[2mFor more help, try running \`[33msubcmds composed <subcommand> --help[39m\`[22m"
`;

exports[`help for composed subcommand 1`] = `
"[1msubcmds composed cat[22m
[2m> [22mA simple \`cat\` clone

ARGUMENTS:
  <stream>    - A file path or a URL to make a GET request to
  [...stream] - A file path or a URL to make a GET request to

FLAGS:
  --help, -h - show help"
`;

exports[`asynchronous type conversion works for failures 1`] = `
"[0m[31m[31m[1merror: [22m[39mfound [33m1[39m error

  [31m[1m1.[22m[39m [31mGot status Not Found 404 reading URL[39m

[31m[1mhint: [22m[39mfor more information, try '[33msubcmds composed cat --help[39m'[0m"
`;

exports[`asynchronous type conversion works for success 1`] = `"200 OK"`;

exports[`subcommands show their version 1`] = `"1.0.0"`;

exports[`shows help for blank args instead of error by default 1`] = `
"[1mbuild[22m

OPTIONS:
  --user, -u <str>      - a string[2m [env: APP_USER][22m
  --password, -p <str>  - a string[2m [env: APP_PASS][22m
  --repo, -r <uri>      - repository uri
  --pr-number, -b <str> - a string[2m [env: APP_BRANCH][22m[2m [optional][22m

FLAGS:
  --dev, -D  - a boolean
  --help, -h - show help"
`;

exports[`failures in defaultValue 1`] = `
"[1mbuild[22m

OPTIONS:
  --user, -u <str>      - a string[2m [env: APP_USER][22m
  --password, -p <str>  - a string[2m [env: APP_PASS][22m
  --repo, -r <uri>      - repository uri
  --pr-number, -b <str> - a string[2m [env: APP_BRANCH][22m[2m [optional][22m

FLAGS:
  --dev, -D  - a boolean
  --help, -h - show help"
`;

exports[`subcommands with process.argv.slice(2) 1`] = `
"[1msubcmds[3m <subcommand>[23m[22m

where [3m<subcommand>[23m can be one of:

[2m- [22msub1
[2m- [22msub2

[2mFor more help, try running \`[33msubcmds <subcommand> --help[39m\`[22m"
`;
